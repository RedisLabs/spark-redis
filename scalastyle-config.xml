<!-- If you wish to turn off checking for a section of code, you can put a comment in the source
     before and after the section, with the following syntax: -->
<!-- // scalastyle:off -->
<!-- ... -->
<!-- // naughty stuff -->
<!-- ... -->
<!-- // scalastyle:on -->

<!-- You can also switch off checking for a specific rule by specifying the id of the rule to ignore
     IDs and such can be found here: http://www.scalastyle.org/rules-0.7.0.html -->
<!--
// scalastyle:off magic.number
var notAtAllAMagicNumber = 1234
// scalastyle:on magic.number
-->
<scalastyle commentFilter="enabled">
    <name>Scalastyle standard configuration</name>
    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
     <parameters>
      <parameter name="maxFileLength"><![CDATA[800]]></parameter>
     </parameters>
    </check>
    <!--<check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="true">-->
     <!--<parameters>-->
      <!--<parameter name="header"><![CDATA[/**-->
 <!--*/]]></parameter>-->
     <!--</parameters>-->
    <!--</check>-->
    <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[120]]></parameter>
            <parameter name="tabSize"><![CDATA[2]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <!-- Should only affect tests
    <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
        </parameters>
    </check>
    -->
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
    <!--<check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>-->
    <!--<check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>-->
    <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[10]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <!-- This breaks symbolic method names so we don't turn it on. -->
    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
     <parameters>
         <parameter name="maxMethods"><![CDATA[30]]></parameter>
     </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
    <!-- disable type parameter checker-->
    <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
        </parameters>
    </check>
    <!-- Wildcard imports are fine
    <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="true"></check>
    -->
    <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="true">
        <parameters>
            <parameter name="allowed"><![CDATA[5]]></parameter>
            <parameter name="ignoreRegex"><![CDATA[^""$]]></parameter>
        </parameters>
    </check>
    <!-- disable since we use implicits imports from object and local implicit imports  -->
    <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="false"></check>
</scalastyle>
